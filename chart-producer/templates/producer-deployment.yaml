apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name}}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/scheme: "http"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/scrape_interval: "5s"
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Values.name}}
  template:
    metadata:
      labels:
        app: {{ .Values.name}}
    spec:
      containers:
        - name: {{ .Values.name}}
          image: {{ .Values.image}}
          ports:
            - containerPort: {{ .Values.port}}
          env:
            - name: LOGSTASH_URL
              value: {{ .Values.logstash.host}}:{{ .Values.logstash.port}}
            - name: TRACING_URL
              value: http://{{ .Values.jaeger.host}}:{{ .Values.jaeger.port}}/v1/traces
            - name: KAFKA_BOOTSTRAP-SERVERS
              value: {{ .Values.kafka.host}}:{{ .Values.kafka.port}}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.port}}
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 1
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.port}}
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 2
            timeoutSeconds: 5